# Import Necessary Libraries
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import cross_val_score

# Split your data
# Assuming X is your feature matrix and y is your target variable
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train your Classifier
# Replace 'YourClassifier' with the actual classifier you're using (e.g., RandomForestClassifier, SVM, etc.)
from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier()
classifier.fit(X_train, y_train)

# Make Predictions
y_pred = classifier.predict(X_test)

# Evaluate Performance
## Accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

## Precision
precision = precision_score(y_test, y_pred, average='weighted')  # 'weighted' for multiclass problems
print(f'Precision: {precision:.2f}')

## Recall
recall = recall_score(y_test, y_pred, average='weighted')  # 'weighted' for multiclass problems
print(f'Recall: {recall:.2f}')

## F1 Score
f1 = f1_score(y_test, y_pred, average='weighted')  # 'weighted' for multiclass problems
print(f'F1 Score: {f1:.2f}')

## Confusion Matrix
conf_matrix = confusion_matrix(y_test, y_pred)
print('Confusion Matrix:')
print(conf_matrix)

# Cross-Validation
# Replace 'YourClassifier' with the actual classifier you're using (e.g., RandomForestClassifier, SVM, etc.)
cross_val_scores = cross_val_score(RandomForestClassifier(), X, y, cv=5)
print(f'Cross-Validation Scores: {cross_val_scores}')
print(f'Mean Cross-Validation Score: {cross_val_scores.mean():.2f}')
